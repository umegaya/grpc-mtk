// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtk.proto

#ifndef PROTOBUF_mtk_2eproto__INCLUDED
#define PROTOBUF_mtk_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace mtk {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_mtk_2eproto();
void protobuf_InitDefaults_mtk_2eproto();
void protobuf_AssignDesc_mtk_2eproto();
void protobuf_ShutdownFile_mtk_2eproto();

class Error;
class Reply;
class Request;
class SystemPayload;
class SystemPayload_Close;
class SystemPayload_Connect;
class SystemPayload_Login;
class SystemPayload_Ping;

enum Request_Kind {
  Request_Kind_Normal = 0,
  Request_Kind_Ping = 1,
  Request_Kind_Connect = 2,
  Request_Kind_Login = 3,
  Request_Kind_Close = 4,
  Request_Kind_Request_Kind_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Request_Kind_Request_Kind_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Request_Kind_IsValid(int value);
const Request_Kind Request_Kind_Kind_MIN = Request_Kind_Normal;
const Request_Kind Request_Kind_Kind_MAX = Request_Kind_Close;
const int Request_Kind_Kind_ARRAYSIZE = Request_Kind_Kind_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_Kind_descriptor();
inline const ::std::string& Request_Kind_Name(Request_Kind value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_Kind_descriptor(), value);
}
inline bool Request_Kind_Parse(
    const ::std::string& name, Request_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_Kind>(
    Request_Kind_descriptor(), name, value);
}
// ===================================================================

class Error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtk.Error) */ {
 public:
  Error();
  virtual ~Error();

  Error(const Error& from);

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Error& default_instance();

  static const Error* internal_default_instance();

  void Swap(Error* other);

  // implements Message ----------------------------------------------

  inline Error* New() const { return New(NULL); }

  Error* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Error& from);
  void MergeFrom(const Error& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Error* other);
  void UnsafeMergeFrom(const Error& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error_code = 1;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // optional bytes payload = 2;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:mtk.Error)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::int32 error_code_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mtk_2eproto_impl();
  friend void  protobuf_AddDesc_mtk_2eproto_impl();
  friend void protobuf_AssignDesc_mtk_2eproto();
  friend void protobuf_ShutdownFile_mtk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Error> Error_default_instance_;

// -------------------------------------------------------------------

class SystemPayload_Connect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtk.SystemPayload.Connect) */ {
 public:
  SystemPayload_Connect();
  virtual ~SystemPayload_Connect();

  SystemPayload_Connect(const SystemPayload_Connect& from);

  inline SystemPayload_Connect& operator=(const SystemPayload_Connect& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemPayload_Connect& default_instance();

  static const SystemPayload_Connect* internal_default_instance();

  void Swap(SystemPayload_Connect* other);

  // implements Message ----------------------------------------------

  inline SystemPayload_Connect* New() const { return New(NULL); }

  SystemPayload_Connect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemPayload_Connect& from);
  void MergeFrom(const SystemPayload_Connect& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPayload_Connect* other);
  void UnsafeMergeFrom(const SystemPayload_Connect& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional bytes payload = 2;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:mtk.SystemPayload.Connect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::uint64 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mtk_2eproto_impl();
  friend void  protobuf_AddDesc_mtk_2eproto_impl();
  friend void protobuf_AssignDesc_mtk_2eproto();
  friend void protobuf_ShutdownFile_mtk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SystemPayload_Connect> SystemPayload_Connect_default_instance_;

// -------------------------------------------------------------------

class SystemPayload_Ping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtk.SystemPayload.Ping) */ {
 public:
  SystemPayload_Ping();
  virtual ~SystemPayload_Ping();

  SystemPayload_Ping(const SystemPayload_Ping& from);

  inline SystemPayload_Ping& operator=(const SystemPayload_Ping& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemPayload_Ping& default_instance();

  static const SystemPayload_Ping* internal_default_instance();

  void Swap(SystemPayload_Ping* other);

  // implements Message ----------------------------------------------

  inline SystemPayload_Ping* New() const { return New(NULL); }

  SystemPayload_Ping* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemPayload_Ping& from);
  void MergeFrom(const SystemPayload_Ping& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPayload_Ping* other);
  void UnsafeMergeFrom(const SystemPayload_Ping& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 now = 1;
  void clear_now();
  static const int kNowFieldNumber = 1;
  ::google::protobuf::uint64 now() const;
  void set_now(::google::protobuf::uint64 value);

  // optional bytes payload = 2;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:mtk.SystemPayload.Ping)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::uint64 now_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mtk_2eproto_impl();
  friend void  protobuf_AddDesc_mtk_2eproto_impl();
  friend void protobuf_AssignDesc_mtk_2eproto();
  friend void protobuf_ShutdownFile_mtk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SystemPayload_Ping> SystemPayload_Ping_default_instance_;

// -------------------------------------------------------------------

class SystemPayload_Login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtk.SystemPayload.Login) */ {
 public:
  SystemPayload_Login();
  virtual ~SystemPayload_Login();

  SystemPayload_Login(const SystemPayload_Login& from);

  inline SystemPayload_Login& operator=(const SystemPayload_Login& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemPayload_Login& default_instance();

  static const SystemPayload_Login* internal_default_instance();

  void Swap(SystemPayload_Login* other);

  // implements Message ----------------------------------------------

  inline SystemPayload_Login* New() const { return New(NULL); }

  SystemPayload_Login* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemPayload_Login& from);
  void MergeFrom(const SystemPayload_Login& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPayload_Login* other);
  void UnsafeMergeFrom(const SystemPayload_Login& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 login_cid = 1;
  void clear_login_cid();
  static const int kLoginCidFieldNumber = 1;
  ::google::protobuf::uint64 login_cid() const;
  void set_login_cid(::google::protobuf::uint64 value);

  // optional uint64 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint32 msgid = 3;
  void clear_msgid();
  static const int kMsgidFieldNumber = 3;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // optional bytes payload = 4;
  void clear_payload();
  static const int kPayloadFieldNumber = 4;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:mtk.SystemPayload.Login)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::uint64 login_cid_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 msgid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mtk_2eproto_impl();
  friend void  protobuf_AddDesc_mtk_2eproto_impl();
  friend void protobuf_AssignDesc_mtk_2eproto();
  friend void protobuf_ShutdownFile_mtk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SystemPayload_Login> SystemPayload_Login_default_instance_;

// -------------------------------------------------------------------

class SystemPayload_Close : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtk.SystemPayload.Close) */ {
 public:
  SystemPayload_Close();
  virtual ~SystemPayload_Close();

  SystemPayload_Close(const SystemPayload_Close& from);

  inline SystemPayload_Close& operator=(const SystemPayload_Close& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemPayload_Close& default_instance();

  static const SystemPayload_Close* internal_default_instance();

  void Swap(SystemPayload_Close* other);

  // implements Message ----------------------------------------------

  inline SystemPayload_Close* New() const { return New(NULL); }

  SystemPayload_Close* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemPayload_Close& from);
  void MergeFrom(const SystemPayload_Close& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPayload_Close* other);
  void UnsafeMergeFrom(const SystemPayload_Close& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtk.SystemPayload.Close)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mtk_2eproto_impl();
  friend void  protobuf_AddDesc_mtk_2eproto_impl();
  friend void protobuf_AssignDesc_mtk_2eproto();
  friend void protobuf_ShutdownFile_mtk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SystemPayload_Close> SystemPayload_Close_default_instance_;

// -------------------------------------------------------------------

class SystemPayload : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtk.SystemPayload) */ {
 public:
  SystemPayload();
  virtual ~SystemPayload();

  SystemPayload(const SystemPayload& from);

  inline SystemPayload& operator=(const SystemPayload& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemPayload& default_instance();

  static const SystemPayload* internal_default_instance();

  void Swap(SystemPayload* other);

  // implements Message ----------------------------------------------

  inline SystemPayload* New() const { return New(NULL); }

  SystemPayload* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemPayload& from);
  void MergeFrom(const SystemPayload& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemPayload* other);
  void UnsafeMergeFrom(const SystemPayload& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SystemPayload_Connect Connect;
  typedef SystemPayload_Ping Ping;
  typedef SystemPayload_Login Login;
  typedef SystemPayload_Close Close;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtk.SystemPayload)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mtk_2eproto_impl();
  friend void  protobuf_AddDesc_mtk_2eproto_impl();
  friend void protobuf_AssignDesc_mtk_2eproto();
  friend void protobuf_ShutdownFile_mtk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SystemPayload> SystemPayload_default_instance_;

// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtk.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static const Request* internal_default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  void UnsafeMergeFrom(const Request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Request_Kind Kind;
  static const Kind Normal =
    Request_Kind_Normal;
  static const Kind Ping =
    Request_Kind_Ping;
  static const Kind Connect =
    Request_Kind_Connect;
  static const Kind Login =
    Request_Kind_Login;
  static const Kind Close =
    Request_Kind_Close;
  static inline bool Kind_IsValid(int value) {
    return Request_Kind_IsValid(value);
  }
  static const Kind Kind_MIN =
    Request_Kind_Kind_MIN;
  static const Kind Kind_MAX =
    Request_Kind_Kind_MAX;
  static const int Kind_ARRAYSIZE =
    Request_Kind_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Kind_descriptor() {
    return Request_Kind_descriptor();
  }
  static inline const ::std::string& Kind_Name(Kind value) {
    return Request_Kind_Name(value);
  }
  static inline bool Kind_Parse(const ::std::string& name,
      Kind* value) {
    return Request_Kind_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 msgid = 2;
  void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // optional .mtk.Request.Kind kind = 3;
  void clear_kind();
  static const int kKindFieldNumber = 3;
  ::mtk::Request_Kind kind() const;
  void set_kind(::mtk::Request_Kind value);

  // optional bytes payload = 10;
  void clear_payload();
  static const int kPayloadFieldNumber = 10;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:mtk.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 msgid_;
  int kind_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mtk_2eproto_impl();
  friend void  protobuf_AddDesc_mtk_2eproto_impl();
  friend void protobuf_AssignDesc_mtk_2eproto();
  friend void protobuf_ShutdownFile_mtk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Request> Request_default_instance_;

// -------------------------------------------------------------------

class Reply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtk.Reply) */ {
 public:
  Reply();
  virtual ~Reply();

  Reply(const Reply& from);

  inline Reply& operator=(const Reply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reply& default_instance();

  static const Reply* internal_default_instance();

  void Swap(Reply* other);

  // implements Message ----------------------------------------------

  inline Reply* New() const { return New(NULL); }

  Reply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Reply& from);
  void MergeFrom(const Reply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Reply* other);
  void UnsafeMergeFrom(const Reply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 msgid = 2;
  void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // optional .mtk.Error error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  const ::mtk::Error& error() const;
  ::mtk::Error* mutable_error();
  ::mtk::Error* release_error();
  void set_allocated_error(::mtk::Error* error);

  // optional bytes payload = 10;
  void clear_payload();
  static const int kPayloadFieldNumber = 10;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:mtk.Reply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::mtk::Error* error_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 msgid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mtk_2eproto_impl();
  friend void  protobuf_AddDesc_mtk_2eproto_impl();
  friend void protobuf_AssignDesc_mtk_2eproto();
  friend void protobuf_ShutdownFile_mtk_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Reply> Reply_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Error

// optional int32 error_code = 1;
inline void Error::clear_error_code() {
  error_code_ = 0;
}
inline ::google::protobuf::int32 Error::error_code() const {
  // @@protoc_insertion_point(field_get:mtk.Error.error_code)
  return error_code_;
}
inline void Error::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:mtk.Error.error_code)
}

// optional bytes payload = 2;
inline void Error::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Error::payload() const {
  // @@protoc_insertion_point(field_get:mtk.Error.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtk.Error.payload)
}
inline void Error::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtk.Error.payload)
}
inline void Error::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtk.Error.payload)
}
inline ::std::string* Error::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:mtk.Error.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Error::release_payload() {
  // @@protoc_insertion_point(field_release:mtk.Error.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:mtk.Error.payload)
}

inline const Error* Error::internal_default_instance() {
  return &Error_default_instance_.get();
}
// -------------------------------------------------------------------

// SystemPayload_Connect

// optional uint64 id = 1;
inline void SystemPayload_Connect::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SystemPayload_Connect::id() const {
  // @@protoc_insertion_point(field_get:mtk.SystemPayload.Connect.id)
  return id_;
}
inline void SystemPayload_Connect::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtk.SystemPayload.Connect.id)
}

// optional bytes payload = 2;
inline void SystemPayload_Connect::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SystemPayload_Connect::payload() const {
  // @@protoc_insertion_point(field_get:mtk.SystemPayload.Connect.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPayload_Connect::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtk.SystemPayload.Connect.payload)
}
inline void SystemPayload_Connect::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtk.SystemPayload.Connect.payload)
}
inline void SystemPayload_Connect::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtk.SystemPayload.Connect.payload)
}
inline ::std::string* SystemPayload_Connect::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:mtk.SystemPayload.Connect.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SystemPayload_Connect::release_payload() {
  // @@protoc_insertion_point(field_release:mtk.SystemPayload.Connect.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPayload_Connect::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:mtk.SystemPayload.Connect.payload)
}

inline const SystemPayload_Connect* SystemPayload_Connect::internal_default_instance() {
  return &SystemPayload_Connect_default_instance_.get();
}
// -------------------------------------------------------------------

// SystemPayload_Ping

// optional uint64 now = 1;
inline void SystemPayload_Ping::clear_now() {
  now_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SystemPayload_Ping::now() const {
  // @@protoc_insertion_point(field_get:mtk.SystemPayload.Ping.now)
  return now_;
}
inline void SystemPayload_Ping::set_now(::google::protobuf::uint64 value) {
  
  now_ = value;
  // @@protoc_insertion_point(field_set:mtk.SystemPayload.Ping.now)
}

// optional bytes payload = 2;
inline void SystemPayload_Ping::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SystemPayload_Ping::payload() const {
  // @@protoc_insertion_point(field_get:mtk.SystemPayload.Ping.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPayload_Ping::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtk.SystemPayload.Ping.payload)
}
inline void SystemPayload_Ping::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtk.SystemPayload.Ping.payload)
}
inline void SystemPayload_Ping::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtk.SystemPayload.Ping.payload)
}
inline ::std::string* SystemPayload_Ping::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:mtk.SystemPayload.Ping.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SystemPayload_Ping::release_payload() {
  // @@protoc_insertion_point(field_release:mtk.SystemPayload.Ping.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPayload_Ping::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:mtk.SystemPayload.Ping.payload)
}

inline const SystemPayload_Ping* SystemPayload_Ping::internal_default_instance() {
  return &SystemPayload_Ping_default_instance_.get();
}
// -------------------------------------------------------------------

// SystemPayload_Login

// optional uint64 login_cid = 1;
inline void SystemPayload_Login::clear_login_cid() {
  login_cid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SystemPayload_Login::login_cid() const {
  // @@protoc_insertion_point(field_get:mtk.SystemPayload.Login.login_cid)
  return login_cid_;
}
inline void SystemPayload_Login::set_login_cid(::google::protobuf::uint64 value) {
  
  login_cid_ = value;
  // @@protoc_insertion_point(field_set:mtk.SystemPayload.Login.login_cid)
}

// optional uint64 id = 2;
inline void SystemPayload_Login::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SystemPayload_Login::id() const {
  // @@protoc_insertion_point(field_get:mtk.SystemPayload.Login.id)
  return id_;
}
inline void SystemPayload_Login::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtk.SystemPayload.Login.id)
}

// optional uint32 msgid = 3;
inline void SystemPayload_Login::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 SystemPayload_Login::msgid() const {
  // @@protoc_insertion_point(field_get:mtk.SystemPayload.Login.msgid)
  return msgid_;
}
inline void SystemPayload_Login::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:mtk.SystemPayload.Login.msgid)
}

// optional bytes payload = 4;
inline void SystemPayload_Login::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SystemPayload_Login::payload() const {
  // @@protoc_insertion_point(field_get:mtk.SystemPayload.Login.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPayload_Login::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtk.SystemPayload.Login.payload)
}
inline void SystemPayload_Login::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtk.SystemPayload.Login.payload)
}
inline void SystemPayload_Login::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtk.SystemPayload.Login.payload)
}
inline ::std::string* SystemPayload_Login::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:mtk.SystemPayload.Login.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SystemPayload_Login::release_payload() {
  // @@protoc_insertion_point(field_release:mtk.SystemPayload.Login.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemPayload_Login::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:mtk.SystemPayload.Login.payload)
}

inline const SystemPayload_Login* SystemPayload_Login::internal_default_instance() {
  return &SystemPayload_Login_default_instance_.get();
}
// -------------------------------------------------------------------

// SystemPayload_Close

inline const SystemPayload_Close* SystemPayload_Close::internal_default_instance() {
  return &SystemPayload_Close_default_instance_.get();
}
// -------------------------------------------------------------------

// SystemPayload

inline const SystemPayload* SystemPayload::internal_default_instance() {
  return &SystemPayload_default_instance_.get();
}
// -------------------------------------------------------------------

// Request

// optional uint32 type = 1;
inline void Request::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 Request::type() const {
  // @@protoc_insertion_point(field_get:mtk.Request.type)
  return type_;
}
inline void Request::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:mtk.Request.type)
}

// optional uint32 msgid = 2;
inline void Request::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 Request::msgid() const {
  // @@protoc_insertion_point(field_get:mtk.Request.msgid)
  return msgid_;
}
inline void Request::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:mtk.Request.msgid)
}

// optional .mtk.Request.Kind kind = 3;
inline void Request::clear_kind() {
  kind_ = 0;
}
inline ::mtk::Request_Kind Request::kind() const {
  // @@protoc_insertion_point(field_get:mtk.Request.kind)
  return static_cast< ::mtk::Request_Kind >(kind_);
}
inline void Request::set_kind(::mtk::Request_Kind value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:mtk.Request.kind)
}

// optional bytes payload = 10;
inline void Request::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::payload() const {
  // @@protoc_insertion_point(field_get:mtk.Request.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtk.Request.payload)
}
inline void Request::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtk.Request.payload)
}
inline void Request::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtk.Request.payload)
}
inline ::std::string* Request::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:mtk.Request.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_payload() {
  // @@protoc_insertion_point(field_release:mtk.Request.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:mtk.Request.payload)
}

inline const Request* Request::internal_default_instance() {
  return &Request_default_instance_.get();
}
// -------------------------------------------------------------------

// Reply

// optional uint32 type = 1;
inline void Reply::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 Reply::type() const {
  // @@protoc_insertion_point(field_get:mtk.Reply.type)
  return type_;
}
inline void Reply::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:mtk.Reply.type)
}

// optional uint32 msgid = 2;
inline void Reply::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 Reply::msgid() const {
  // @@protoc_insertion_point(field_get:mtk.Reply.msgid)
  return msgid_;
}
inline void Reply::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:mtk.Reply.msgid)
}

// optional .mtk.Error error = 3;
inline bool Reply::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void Reply::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::mtk::Error& Reply::error() const {
  // @@protoc_insertion_point(field_get:mtk.Reply.error)
  return error_ != NULL ? *error_
                         : *::mtk::Error::internal_default_instance();
}
inline ::mtk::Error* Reply::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::mtk::Error;
  }
  // @@protoc_insertion_point(field_mutable:mtk.Reply.error)
  return error_;
}
inline ::mtk::Error* Reply::release_error() {
  // @@protoc_insertion_point(field_release:mtk.Reply.error)
  
  ::mtk::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void Reply::set_allocated_error(::mtk::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtk.Reply.error)
}

// optional bytes payload = 10;
inline void Reply::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Reply::payload() const {
  // @@protoc_insertion_point(field_get:mtk.Reply.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reply::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtk.Reply.payload)
}
inline void Reply::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtk.Reply.payload)
}
inline void Reply::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtk.Reply.payload)
}
inline ::std::string* Reply::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:mtk.Reply.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Reply::release_payload() {
  // @@protoc_insertion_point(field_release:mtk.Reply.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reply::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:mtk.Reply.payload)
}

inline const Reply* Reply::internal_default_instance() {
  return &Reply_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mtk

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mtk::Request_Kind> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mtk::Request_Kind>() {
  return ::mtk::Request_Kind_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mtk_2eproto__INCLUDED
